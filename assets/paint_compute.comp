#version 430 core

layout (local_size_x = 10, local_size_y = 10, local_size_z = 1) in;

layout(rgba8, binding = 0) uniform image2D image;
layout(rgba8, binding = 1) uniform image2D mask;
layout(rgba8, binding = 2) uniform image2D referenceTexture;

layout (location = 0) uniform vec2 firstPos;
layout (location = 1) uniform vec2 secondPos;
layout (location = 2) uniform float paintSize;
layout (location = 3) uniform vec4 color;
layout (location = 5) uniform bool copyIR;

float distanceToLine(vec2 p, vec2 v1, vec2 v2)
{
    vec2 v = v2 - v1;
    vec2 w = p - v1;
    float c1 = dot(w, v);
    if (c1 <= 0.0)
        return distance(p, v1);

    float c2 = dot(v, v);
    if (c2 <= c1)
        return distance(p, v2);

    vec2 pb = v1 + v * (c1 / c2);
    return distance(p, pb);
}

void main()
{
	vec4 value = vec4(0.0, 0.0, 0.0, 1.0);
	ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

	if(copyIR)
	{
		imageStore(referenceTexture, texelCoord, imageLoad(image, texelCoord));	
	}
	else if(imageLoad(mask, texelCoord).xyz != vec3(0, 0, 0))
	{
		if(distanceToLine(texelCoord, firstPos, secondPos) < (paintSize / 2.0))
			imageStore(image, texelCoord, mix(imageLoad(referenceTexture, texelCoord), vec4(color.rgb, 1), color.a));	
	}
}